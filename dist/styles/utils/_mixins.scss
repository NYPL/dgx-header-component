/* FONT FACE MIXIN
 * ---------------
 * Usage: @include font-face('Kievit-Regular', 'http://...');
 * Desc: Do not include the font file extension, this mixin
 * will generate the proper extensions.
*/ 
@mixin font-face($font-family, $file-path) {
  @font-face {
    font-family: $font-family;
    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
         url('#{$file-path}.woff') format('woff'),
         url('#{$file-path}.ttf') format('truetype');
  }
}

/* BORDER RADIUS MIXIN
 * -------------------
 * Usage: @include border-radius(5px);
 * Desc: Creates a border radius
*/ 
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

/* OPACITY MIXIN
 * ---------------
 * Usage: @include opacity(0.8);
 * Desc: Supports cross-browser Opacity rules
*/
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/* UP ARROW MIXIN
 * ---------------
 * Usage: @include up-arrow(#EEE);
 * Desc: Creates a CSS3 arrow using pseudo :before,:after
 * Params: @color - HEX,RGB color of arrow
 *         @left - Distance from the left of the parent wrapper
 *         @bottom-or-top - String representation of either distance from the TOP or BOTTOM
 *         @distance - Distance from either TOP or BOTTOM
 *         @border-width - pixel width of arrow
*/
@mixin up-arrow($color, $left: 25%, $bottom-or-top: 'top', $distance: 0px, $border-width: 10px) {
  &:before, &:after {
    content: ' ';
    height: 0;
    position: absolute;
    width: 0;
    border-style: solid;
    border-width: $border-width;
    border-top-color: transparent;
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom-color: $color;    
    left: $left;

    @if ($bottom-or-top == 'top') {
      top: $distance;
    } @else {
      bottom: $distance;
    }
  }
  /* top-stacked, smaller arrow */
  &:before {
    z-index: 2;
  }
  /* arrow which acts as a background shadow */
  &:after {
    z-index: 1;
  }
}

/* CLEARFIX EXTEND MIXIN
 * ---------------------
 * Usage: @extend %clearfix;
 * Desc: Provides IE6 and up support
 * to clear floated elements.
*/
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* VALUE CALCULATION MIXIN
 * ---------------------
 * Usage: Makes the properties of an element
 * can be defined by both percentage
 * and pixels.
*/

@mixin calculation($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression});
}